#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Reasonable Programming
\end_layout

\begin_layout Standard
We often talk about writing 
\begin_inset Quotes eld
\end_inset

readable
\begin_inset Quotes erd
\end_inset

 code.
 By this, we mean writing code that others can follow and understand.
 Sometimes we equate this with well-commented code; sometimes we mean code
 that's plainly written.
 Readable code is something we should strive for, but it's not enough.
 We should really try to write 
\begin_inset Quotes eld
\end_inset

reasonable code
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Whenever we work with code, use code, maintain code, rewrite code, or extend
 code, we are reasoning about code.
 Whenever we're debugging code or trying to figure out a production issue,
 we are reasoning about code.
\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

Reasonable programming
\begin_inset Quotes erd
\end_inset

 is writing code that you can literally reason about.
 It's related to proving code correctness, though much less formal.
 Reasonable code is written so that it's easy to 
\emph on
argue
\emph default
 about correctness.
 You claim that a function will return correct results when certain conditions
 are true.
 You write your code and comments in such a way that they are your evidence
 and warrants supporting this claim.
 
\end_layout

\begin_layout Standard
Using reasonable code leads to more reasonable code.
 When you write a function, its domain (i.e., inputs) may be out of your control,
 but what's in its range (i.e., outputs) is up to you.
 If you make the range of your function tight and predictable, you help
 callers of your function make strong assumptions in their own functions.
 Being able to make strong assumptions allows them to write cleaner, more
 readable, and more 
\emph on
reasonable
\emph default
 code.
 A program that executes a chain of reasonable code is itself more reasonable,
 and hence, more deterministic and more predictable.
\end_layout

\begin_layout Standard
Give it a try the next time you write code.
 Think about the assumptions you're making.
 Make them explicit.
 Try to make the outputs of your functions more predictable than their inputs.
 Be reasonable for a change :-)
\end_layout

\end_body
\end_document
