#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
Execute faster by 
\begin_inset Quotes eld
\end_inset

zone melting
\begin_inset Quotes erd
\end_inset

 your processes
\end_layout

\begin_layout Standard
Last time, I talked about why 
\begin_inset Quotes eld
\end_inset

quadratic time
\begin_inset Quotes erd
\end_inset

 processes are bad (they're part of the reason it's taking you so long to
 get so little done with so many people).
 One way to get from quadratic time to linear time is to 
\begin_inset Quotes eld
\end_inset

zone melt
\begin_inset Quotes erd
\end_inset

 your processes.
\end_layout

\begin_layout Subsection*
What is zone melting?
\end_layout

\begin_layout Standard
Zone melting is a technique for purifying metals and semiconductors.
 The idea is that you heat a narrow band of material till it melts and then
 sweep slowly across the length of the material.
 As you do this, some of the defects/impurities will flow with the molten
 band to the end.
 If the material is pure enough, then you're done; if not, then you take
 another pass.
 This was one of the key innovations for precisely controlling the purity
 of semiconductors at the dawn of Silicon Valley.
\end_layout

\begin_layout Standard
You can apply this same zone melting idea to your engineering and development
 processes.
 In this case, think of your product as the 
\begin_inset Quotes eld
\end_inset

metal
\begin_inset Quotes erd
\end_inset

, what you're team is working on right now as the 
\begin_inset Quotes eld
\end_inset

molten band
\begin_inset Quotes erd
\end_inset

, and the defects as, well, the defects :-) As your team makes a development
 pass on your product, some defects will be swept away (i.e.
 fixed) and some will be left behind (to be addressed in a future dev pass).
 The crucial idea is that there are certain defects that 
\emph on
must
\emph default
 be left behind in order for this to work.
\end_layout

\begin_layout Subsection*
What defects should be left for the next pass?
\end_layout

\begin_layout Standard
The defects you leave for future dev passes are the ones that cause rippling
 rework and result in your processes running in quadratic time.
 Any changes to the information architecture or visual design must be left
 for next time.
 Any changes to API specs must be left for next time.
 Any changes to 
\emph on
any
\emph default
 interface between two people must be left for next time.
 If you try to address these at the point at which they happen, you will
 trigger cascades of rework that will cause everything to run late.
 Once you decide on the specs (at any level) you must hold to them until
 you take your next dev pass.
\end_layout

\begin_layout Standard
One benefit of doing this is that you always have something done at the
 end of each dev cycle.
 It's much more satisfying to be able to demo something (even if it's for
 an older version of a spec) than it is to have 80% done of nothing to show.
 Another benefit, is that once you've done a complete pass, you have a better
 idea of the risk areas.
 You'll uncover some of the implicit assumptions you were making about the
 product.
 These will almost certainly influence the next revision of your specs.
 And best of all, you would have gone from quadratic time to linear time.
 Doing multiple passes in linear time is iterative development done right.
\end_layout

\begin_layout Standard
The time to change your specs (UI, design, arch, API, functional) is in
 between dev cycles, not during them.
 Be judicious in the defects you address during a dev cycle -- remember,
 in order to execute efficiently, you have to leave interface/spec defects
 behind.
 Resist the temptation to change everything at the point of discovery.
 If, at your next postmortem/retrospective, your team complains about having
 to hit a moving target, consider 
\begin_inset Quotes eld
\end_inset

zone melting
\begin_inset Quotes erd
\end_inset

 as one way to address it.
\end_layout

\end_body
\end_document
